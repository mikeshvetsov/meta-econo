From b2e3367c63ba5c5e0b11acaa26040c52f0abd6c0 Mon Sep 17 00:00:00 2001
Message-Id: <b2e3367c63ba5c5e0b11acaa26040c52f0abd6c0.1572276639.git.keller@fs-net.de>
From: Hartmut Keller <keller@fs-net.de>
Date: Mon, 28 Oct 2019 16:30:30 +0100
Subject: [PATCH] Do not allocate RAM dump buffer

The sdio code allocates a buffer for RAM dumps with a static RAM address
with ioremap(). This is very strange and of course fails on i.MX6SX.

We do not want to (and even can not) debug firmware code, so any such dump
does not make sense for end customers. Disable this feature by returning
NULL from the allocate function.
---
 CORE/SERVICES/HIF/sdio/linux/if_ath_sdio.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/CORE/SERVICES/HIF/sdio/linux/if_ath_sdio.c b/CORE/SERVICES/HIF/sdio/linux/if_ath_sdio.c
index 24bf785dd..fcb99b1f8 100644
--- a/CORE/SERVICES/HIF/sdio/linux/if_ath_sdio.c
+++ b/CORE/SERVICES/HIF/sdio/linux/if_ath_sdio.c
@@ -99,11 +99,16 @@ static inline void hif_release_ramdump_mem(unsigned long *address)
 #ifndef TARGET_DUMP_FOR_NON_QC_PLATFORM
 static inline void *hif_get_virt_ramdump_mem(unsigned long *size)
 {
+#if 0
 	void *addr;
 	addr = ioremap(RAMDUMP_ADDR, RAMDUMP_SIZE);
 	if (addr)
 		*size = RAMDUMP_SIZE;
 	return addr;
+#else
+	/* No support for RAM dump */
+	return NULL;
+#endif
 }
 
 static inline void hif_release_ramdump_mem(unsigned long *address)
-- 
2.14.5

